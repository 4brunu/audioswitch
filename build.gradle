buildscript {
    ext {
        kotlin_version = '1.3.71'
    }

    /**
     * Properties and environment variables needed to publish to Bintray.
     */
    ext.mavenRepo = (project.hasProperty('maven.repo') ?
            project.property("maven.repo") : '')
    ext.mavenUsername = (project.hasProperty('maven.username') ?
            project.property("maven.username") : '')
    ext.mavenPassword = (project.hasProperty('maven.password') ?
            project.property("maven.password") : '')

    ext.getAudioSwitchBintrayUsername = {
        def audioSwitchBintrayUsername  = System.getenv("AUDIOSWITCH_BINTRAY_USERNAME");

        if (audioSwitchBintrayUsername == null) {
            logger.log(LogLevel.INFO, "Could not locate AUDIOSWITCH_BINTRAY_USERNAME environment variable. " +
                    "Trying local.properties")
            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').exists()) {
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                audioSwitchBintrayUsername = properties.getProperty('AUDIOSWITCH_BINTRAY_USERNAME')
            }
        }

        if (audioSwitchBintrayUsername == null) {
            logger.log(LogLevel.WARN, "AudioSwitch Bintray username unavailable.")
        }

        return audioSwitchBintrayUsername;
    }

    ext.getAudioSwitchBintrayPassword = {
        def audioSwitchBintrayPassword  = System.getenv("AUDIOSWITCH_BINTRAY_PASSWORD");

        if (audioSwitchBintrayPassword == null) {
            logger.log(LogLevel.INFO, "Could not locate AUDIOSWITCH_BINTRAY_PASSWORD environment variable. " +
                    "Trying local.properties")
            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').exists()) {
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                audioSwitchBintrayPassword = properties.getProperty('AUDIOSWITCH_BINTRAY_PASSWORD')
            }
        }

        if (audioSwitchBintrayPassword == null) {
            logger.log(LogLevel.WARN, "AudioSwitch Bintray password unavailable.")
        }

        return audioSwitchBintrayPassword;
    }

    ext.getShortCommitSha = {
        def gitSha = System.getenv("CIRCLE_SHA1")

        return gitSha.substring(0, 7)
    }

    ext.getVersionName = {
        return "${versionMajor}.${versionMinor}.${versionPatch}" +
                ((project.hasProperty("preRelease") && project.property("preRelease").toBoolean() == true) ?
                        "-${getShortCommitSha()}" :
                        '')
    }

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.13.0"
}
apply plugin: "com.diffplug.gradle.spotless"
spotless {
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        target '**/*.java'
        googleJavaFormat().aosp()
    }
    kotlin {
        target '**/*.kt'
        ktlint()
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task bintrayAudioSwitchPreReleaseUpload(type: GradleBuild) {
    description = 'Publish an AudioSwitch pre release'
    group = 'Publishing'
    buildFile = file('audioswitch/build.gradle')
    tasks = ['assembleRelease', 'uploadArchives']
    startParameter.projectProperties += gradle.startParameter.projectProperties + [
            'preRelease': true,
            'maven.repo': 'https://api.bintray.com/maven/twilio/internal-release/audioswitch/;publish=1',
            'maven.username': "${getAudioSwitchBintrayUsername()}",
            'maven.password': "${getAudioSwitchBintrayPassword()}"
    ]
}
